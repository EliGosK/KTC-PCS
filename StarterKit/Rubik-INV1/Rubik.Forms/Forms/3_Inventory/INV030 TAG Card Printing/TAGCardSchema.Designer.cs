//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Rubik.Forms.Forms.Inventory.INV030_TAG_Card_Printing {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("TAGCardSchema")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class TAGCardSchema : global::System.Data.DataSet {
        
        private WK_TAG_CARD_FGDataTable tableWK_TAG_CARD_FG;
        
        private WK_TAG_CARD_WIPDataTable tableWK_TAG_CARD_WIP;
        
        private WK_TAG_CARD_RMDataTable tableWK_TAG_CARD_RM;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TAGCardSchema() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected TAGCardSchema(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["WK_TAG_CARD_FG"] != null)) {
                    base.Tables.Add(new WK_TAG_CARD_FGDataTable(ds.Tables["WK_TAG_CARD_FG"]));
                }
                if ((ds.Tables["WK_TAG_CARD_WIP"] != null)) {
                    base.Tables.Add(new WK_TAG_CARD_WIPDataTable(ds.Tables["WK_TAG_CARD_WIP"]));
                }
                if ((ds.Tables["WK_TAG_CARD_RM"] != null)) {
                    base.Tables.Add(new WK_TAG_CARD_RMDataTable(ds.Tables["WK_TAG_CARD_RM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WK_TAG_CARD_FGDataTable WK_TAG_CARD_FG {
            get {
                return this.tableWK_TAG_CARD_FG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WK_TAG_CARD_WIPDataTable WK_TAG_CARD_WIP {
            get {
                return this.tableWK_TAG_CARD_WIP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WK_TAG_CARD_RMDataTable WK_TAG_CARD_RM {
            get {
                return this.tableWK_TAG_CARD_RM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            TAGCardSchema cln = ((TAGCardSchema)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["WK_TAG_CARD_FG"] != null)) {
                    base.Tables.Add(new WK_TAG_CARD_FGDataTable(ds.Tables["WK_TAG_CARD_FG"]));
                }
                if ((ds.Tables["WK_TAG_CARD_WIP"] != null)) {
                    base.Tables.Add(new WK_TAG_CARD_WIPDataTable(ds.Tables["WK_TAG_CARD_WIP"]));
                }
                if ((ds.Tables["WK_TAG_CARD_RM"] != null)) {
                    base.Tables.Add(new WK_TAG_CARD_RMDataTable(ds.Tables["WK_TAG_CARD_RM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableWK_TAG_CARD_FG = ((WK_TAG_CARD_FGDataTable)(base.Tables["WK_TAG_CARD_FG"]));
            if ((initTable == true)) {
                if ((this.tableWK_TAG_CARD_FG != null)) {
                    this.tableWK_TAG_CARD_FG.InitVars();
                }
            }
            this.tableWK_TAG_CARD_WIP = ((WK_TAG_CARD_WIPDataTable)(base.Tables["WK_TAG_CARD_WIP"]));
            if ((initTable == true)) {
                if ((this.tableWK_TAG_CARD_WIP != null)) {
                    this.tableWK_TAG_CARD_WIP.InitVars();
                }
            }
            this.tableWK_TAG_CARD_RM = ((WK_TAG_CARD_RMDataTable)(base.Tables["WK_TAG_CARD_RM"]));
            if ((initTable == true)) {
                if ((this.tableWK_TAG_CARD_RM != null)) {
                    this.tableWK_TAG_CARD_RM.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "TAGCardSchema";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TAGCardSchema.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableWK_TAG_CARD_FG = new WK_TAG_CARD_FGDataTable();
            base.Tables.Add(this.tableWK_TAG_CARD_FG);
            this.tableWK_TAG_CARD_WIP = new WK_TAG_CARD_WIPDataTable();
            base.Tables.Add(this.tableWK_TAG_CARD_WIP);
            this.tableWK_TAG_CARD_RM = new WK_TAG_CARD_RMDataTable();
            base.Tables.Add(this.tableWK_TAG_CARD_RM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWK_TAG_CARD_FG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWK_TAG_CARD_WIP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWK_TAG_CARD_RM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            TAGCardSchema ds = new TAGCardSchema();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void WK_TAG_CARD_FGRowChangeEventHandler(object sender, WK_TAG_CARD_FGRowChangeEvent e);
        
        public delegate void WK_TAG_CARD_WIPRowChangeEventHandler(object sender, WK_TAG_CARD_WIPRowChangeEvent e);
        
        public delegate void WK_TAG_CARD_RMRowChangeEventHandler(object sender, WK_TAG_CARD_RMRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WK_TAG_CARD_FGDataTable : global::System.Data.TypedTableBase<WK_TAG_CARD_FGRow> {
            
            private global::System.Data.DataColumn columnBARCODE;
            
            private global::System.Data.DataColumn columnIMAGE_BIN;
            
            private global::System.Data.DataColumn columnITEM_CD;
            
            private global::System.Data.DataColumn columnITEM_DESC;
            
            private global::System.Data.DataColumn columnFOR_CUSTOMER;
            
            private global::System.Data.DataColumn columnPART_8_DIGIT;
            
            private global::System.Data.DataColumn columnLOT_NO;
            
            private global::System.Data.DataColumn columnPACK_SIZE;
            
            private global::System.Data.DataColumn columnINV_UM_CLS;
            
            private global::System.Data.DataColumn columnBARCODE2;
            
            private global::System.Data.DataColumn columnIMAGE_BIN2;
            
            private global::System.Data.DataColumn columnITEM_CD2;
            
            private global::System.Data.DataColumn columnITEM_DESC2;
            
            private global::System.Data.DataColumn columnFOR_CUSTOMER2;
            
            private global::System.Data.DataColumn columnPART_8_DIGIT2;
            
            private global::System.Data.DataColumn columnLOT_NO2;
            
            private global::System.Data.DataColumn columnPACK_SIZE2;
            
            private global::System.Data.DataColumn columnINV_UM_CLS2;
            
            private global::System.Data.DataColumn columnMODEL;
            
            private global::System.Data.DataColumn columnMODEL2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_FGDataTable() {
                this.TableName = "WK_TAG_CARD_FG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WK_TAG_CARD_FGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WK_TAG_CARD_FGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BARCODEColumn {
                get {
                    return this.columnBARCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IMAGE_BINColumn {
                get {
                    return this.columnIMAGE_BIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEM_CDColumn {
                get {
                    return this.columnITEM_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEM_DESCColumn {
                get {
                    return this.columnITEM_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FOR_CUSTOMERColumn {
                get {
                    return this.columnFOR_CUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PART_8_DIGITColumn {
                get {
                    return this.columnPART_8_DIGIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOT_NOColumn {
                get {
                    return this.columnLOT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_SIZEColumn {
                get {
                    return this.columnPACK_SIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INV_UM_CLSColumn {
                get {
                    return this.columnINV_UM_CLS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BARCODE2Column {
                get {
                    return this.columnBARCODE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IMAGE_BIN2Column {
                get {
                    return this.columnIMAGE_BIN2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEM_CD2Column {
                get {
                    return this.columnITEM_CD2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEM_DESC2Column {
                get {
                    return this.columnITEM_DESC2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FOR_CUSTOMER2Column {
                get {
                    return this.columnFOR_CUSTOMER2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PART_8_DIGIT2Column {
                get {
                    return this.columnPART_8_DIGIT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOT_NO2Column {
                get {
                    return this.columnLOT_NO2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_SIZE2Column {
                get {
                    return this.columnPACK_SIZE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INV_UM_CLS2Column {
                get {
                    return this.columnINV_UM_CLS2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODELColumn {
                get {
                    return this.columnMODEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODEL2Column {
                get {
                    return this.columnMODEL2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_FGRow this[int index] {
                get {
                    return ((WK_TAG_CARD_FGRow)(this.Rows[index]));
                }
            }
            
            public event WK_TAG_CARD_FGRowChangeEventHandler WK_TAG_CARD_FGRowChanging;
            
            public event WK_TAG_CARD_FGRowChangeEventHandler WK_TAG_CARD_FGRowChanged;
            
            public event WK_TAG_CARD_FGRowChangeEventHandler WK_TAG_CARD_FGRowDeleting;
            
            public event WK_TAG_CARD_FGRowChangeEventHandler WK_TAG_CARD_FGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWK_TAG_CARD_FGRow(WK_TAG_CARD_FGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_FGRow AddWK_TAG_CARD_FGRow(
                        string BARCODE, 
                        byte[] IMAGE_BIN, 
                        string ITEM_CD, 
                        string ITEM_DESC, 
                        string FOR_CUSTOMER, 
                        string PART_8_DIGIT, 
                        string LOT_NO, 
                        string PACK_SIZE, 
                        string INV_UM_CLS, 
                        string BARCODE2, 
                        byte[] IMAGE_BIN2, 
                        string ITEM_CD2, 
                        string ITEM_DESC2, 
                        string FOR_CUSTOMER2, 
                        string PART_8_DIGIT2, 
                        string LOT_NO2, 
                        string PACK_SIZE2, 
                        string INV_UM_CLS2, 
                        string MODEL, 
                        string MODEL2) {
                WK_TAG_CARD_FGRow rowWK_TAG_CARD_FGRow = ((WK_TAG_CARD_FGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BARCODE,
                        IMAGE_BIN,
                        ITEM_CD,
                        ITEM_DESC,
                        FOR_CUSTOMER,
                        PART_8_DIGIT,
                        LOT_NO,
                        PACK_SIZE,
                        INV_UM_CLS,
                        BARCODE2,
                        IMAGE_BIN2,
                        ITEM_CD2,
                        ITEM_DESC2,
                        FOR_CUSTOMER2,
                        PART_8_DIGIT2,
                        LOT_NO2,
                        PACK_SIZE2,
                        INV_UM_CLS2,
                        MODEL,
                        MODEL2};
                rowWK_TAG_CARD_FGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWK_TAG_CARD_FGRow);
                return rowWK_TAG_CARD_FGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WK_TAG_CARD_FGDataTable cln = ((WK_TAG_CARD_FGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WK_TAG_CARD_FGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBARCODE = base.Columns["BARCODE"];
                this.columnIMAGE_BIN = base.Columns["IMAGE_BIN"];
                this.columnITEM_CD = base.Columns["ITEM_CD"];
                this.columnITEM_DESC = base.Columns["ITEM_DESC"];
                this.columnFOR_CUSTOMER = base.Columns["FOR_CUSTOMER"];
                this.columnPART_8_DIGIT = base.Columns["PART_8_DIGIT"];
                this.columnLOT_NO = base.Columns["LOT_NO"];
                this.columnPACK_SIZE = base.Columns["PACK_SIZE"];
                this.columnINV_UM_CLS = base.Columns["INV_UM_CLS"];
                this.columnBARCODE2 = base.Columns["BARCODE2"];
                this.columnIMAGE_BIN2 = base.Columns["IMAGE_BIN2"];
                this.columnITEM_CD2 = base.Columns["ITEM_CD2"];
                this.columnITEM_DESC2 = base.Columns["ITEM_DESC2"];
                this.columnFOR_CUSTOMER2 = base.Columns["FOR_CUSTOMER2"];
                this.columnPART_8_DIGIT2 = base.Columns["PART_8_DIGIT2"];
                this.columnLOT_NO2 = base.Columns["LOT_NO2"];
                this.columnPACK_SIZE2 = base.Columns["PACK_SIZE2"];
                this.columnINV_UM_CLS2 = base.Columns["INV_UM_CLS2"];
                this.columnMODEL = base.Columns["MODEL"];
                this.columnMODEL2 = base.Columns["MODEL2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBARCODE = new global::System.Data.DataColumn("BARCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBARCODE);
                this.columnIMAGE_BIN = new global::System.Data.DataColumn("IMAGE_BIN", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMAGE_BIN);
                this.columnITEM_CD = new global::System.Data.DataColumn("ITEM_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_CD);
                this.columnITEM_DESC = new global::System.Data.DataColumn("ITEM_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_DESC);
                this.columnFOR_CUSTOMER = new global::System.Data.DataColumn("FOR_CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOR_CUSTOMER);
                this.columnPART_8_DIGIT = new global::System.Data.DataColumn("PART_8_DIGIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPART_8_DIGIT);
                this.columnLOT_NO = new global::System.Data.DataColumn("LOT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_NO);
                this.columnPACK_SIZE = new global::System.Data.DataColumn("PACK_SIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACK_SIZE);
                this.columnINV_UM_CLS = new global::System.Data.DataColumn("INV_UM_CLS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINV_UM_CLS);
                this.columnBARCODE2 = new global::System.Data.DataColumn("BARCODE2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBARCODE2);
                this.columnIMAGE_BIN2 = new global::System.Data.DataColumn("IMAGE_BIN2", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMAGE_BIN2);
                this.columnITEM_CD2 = new global::System.Data.DataColumn("ITEM_CD2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_CD2);
                this.columnITEM_DESC2 = new global::System.Data.DataColumn("ITEM_DESC2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_DESC2);
                this.columnFOR_CUSTOMER2 = new global::System.Data.DataColumn("FOR_CUSTOMER2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOR_CUSTOMER2);
                this.columnPART_8_DIGIT2 = new global::System.Data.DataColumn("PART_8_DIGIT2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPART_8_DIGIT2);
                this.columnLOT_NO2 = new global::System.Data.DataColumn("LOT_NO2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_NO2);
                this.columnPACK_SIZE2 = new global::System.Data.DataColumn("PACK_SIZE2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACK_SIZE2);
                this.columnINV_UM_CLS2 = new global::System.Data.DataColumn("INV_UM_CLS2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINV_UM_CLS2);
                this.columnMODEL = new global::System.Data.DataColumn("MODEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODEL);
                this.columnMODEL2 = new global::System.Data.DataColumn("MODEL2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODEL2);
                this.columnBARCODE.MaxLength = 40;
                this.columnITEM_CD.MaxLength = 20;
                this.columnITEM_DESC.MaxLength = 50;
                this.columnFOR_CUSTOMER.MaxLength = 20;
                this.columnPART_8_DIGIT.MaxLength = 8;
                this.columnLOT_NO.MaxLength = 50;
                this.columnINV_UM_CLS.MaxLength = 5;
                this.columnBARCODE2.MaxLength = 40;
                this.columnITEM_CD2.MaxLength = 20;
                this.columnITEM_DESC2.MaxLength = 50;
                this.columnFOR_CUSTOMER2.MaxLength = 20;
                this.columnPART_8_DIGIT2.MaxLength = 8;
                this.columnLOT_NO2.MaxLength = 50;
                this.columnINV_UM_CLS2.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_FGRow NewWK_TAG_CARD_FGRow() {
                return ((WK_TAG_CARD_FGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WK_TAG_CARD_FGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WK_TAG_CARD_FGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WK_TAG_CARD_FGRowChanged != null)) {
                    this.WK_TAG_CARD_FGRowChanged(this, new WK_TAG_CARD_FGRowChangeEvent(((WK_TAG_CARD_FGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WK_TAG_CARD_FGRowChanging != null)) {
                    this.WK_TAG_CARD_FGRowChanging(this, new WK_TAG_CARD_FGRowChangeEvent(((WK_TAG_CARD_FGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WK_TAG_CARD_FGRowDeleted != null)) {
                    this.WK_TAG_CARD_FGRowDeleted(this, new WK_TAG_CARD_FGRowChangeEvent(((WK_TAG_CARD_FGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WK_TAG_CARD_FGRowDeleting != null)) {
                    this.WK_TAG_CARD_FGRowDeleting(this, new WK_TAG_CARD_FGRowChangeEvent(((WK_TAG_CARD_FGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWK_TAG_CARD_FGRow(WK_TAG_CARD_FGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TAGCardSchema ds = new TAGCardSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WK_TAG_CARD_FGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WK_TAG_CARD_WIPDataTable : global::System.Data.TypedTableBase<WK_TAG_CARD_WIPRow> {
            
            private global::System.Data.DataColumn columnBARCODE;
            
            private global::System.Data.DataColumn columnIMAGE_BIN;
            
            private global::System.Data.DataColumn columnITEM_CD;
            
            private global::System.Data.DataColumn columnITEM_DESC;
            
            private global::System.Data.DataColumn columnFOR_CUSTOMER;
            
            private global::System.Data.DataColumn columnPART_8_DIGIT;
            
            private global::System.Data.DataColumn columnLOT_NO;
            
            private global::System.Data.DataColumn columnMAIN_MATTERIAL;
            
            private global::System.Data.DataColumn columnPACK_SIZE;
            
            private global::System.Data.DataColumn columnINV_UM_CLS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_WIPDataTable() {
                this.TableName = "WK_TAG_CARD_WIP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WK_TAG_CARD_WIPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WK_TAG_CARD_WIPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BARCODEColumn {
                get {
                    return this.columnBARCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IMAGE_BINColumn {
                get {
                    return this.columnIMAGE_BIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEM_CDColumn {
                get {
                    return this.columnITEM_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEM_DESCColumn {
                get {
                    return this.columnITEM_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FOR_CUSTOMERColumn {
                get {
                    return this.columnFOR_CUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PART_8_DIGITColumn {
                get {
                    return this.columnPART_8_DIGIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOT_NOColumn {
                get {
                    return this.columnLOT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAIN_MATTERIALColumn {
                get {
                    return this.columnMAIN_MATTERIAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_SIZEColumn {
                get {
                    return this.columnPACK_SIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INV_UM_CLSColumn {
                get {
                    return this.columnINV_UM_CLS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_WIPRow this[int index] {
                get {
                    return ((WK_TAG_CARD_WIPRow)(this.Rows[index]));
                }
            }
            
            public event WK_TAG_CARD_WIPRowChangeEventHandler WK_TAG_CARD_WIPRowChanging;
            
            public event WK_TAG_CARD_WIPRowChangeEventHandler WK_TAG_CARD_WIPRowChanged;
            
            public event WK_TAG_CARD_WIPRowChangeEventHandler WK_TAG_CARD_WIPRowDeleting;
            
            public event WK_TAG_CARD_WIPRowChangeEventHandler WK_TAG_CARD_WIPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWK_TAG_CARD_WIPRow(WK_TAG_CARD_WIPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_WIPRow AddWK_TAG_CARD_WIPRow(string BARCODE, byte[] IMAGE_BIN, string ITEM_CD, string ITEM_DESC, string FOR_CUSTOMER, string PART_8_DIGIT, string LOT_NO, string MAIN_MATTERIAL, string PACK_SIZE, string INV_UM_CLS) {
                WK_TAG_CARD_WIPRow rowWK_TAG_CARD_WIPRow = ((WK_TAG_CARD_WIPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BARCODE,
                        IMAGE_BIN,
                        ITEM_CD,
                        ITEM_DESC,
                        FOR_CUSTOMER,
                        PART_8_DIGIT,
                        LOT_NO,
                        MAIN_MATTERIAL,
                        PACK_SIZE,
                        INV_UM_CLS};
                rowWK_TAG_CARD_WIPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWK_TAG_CARD_WIPRow);
                return rowWK_TAG_CARD_WIPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WK_TAG_CARD_WIPDataTable cln = ((WK_TAG_CARD_WIPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WK_TAG_CARD_WIPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBARCODE = base.Columns["BARCODE"];
                this.columnIMAGE_BIN = base.Columns["IMAGE_BIN"];
                this.columnITEM_CD = base.Columns["ITEM_CD"];
                this.columnITEM_DESC = base.Columns["ITEM_DESC"];
                this.columnFOR_CUSTOMER = base.Columns["FOR_CUSTOMER"];
                this.columnPART_8_DIGIT = base.Columns["PART_8_DIGIT"];
                this.columnLOT_NO = base.Columns["LOT_NO"];
                this.columnMAIN_MATTERIAL = base.Columns["MAIN_MATTERIAL"];
                this.columnPACK_SIZE = base.Columns["PACK_SIZE"];
                this.columnINV_UM_CLS = base.Columns["INV_UM_CLS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBARCODE = new global::System.Data.DataColumn("BARCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBARCODE);
                this.columnIMAGE_BIN = new global::System.Data.DataColumn("IMAGE_BIN", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMAGE_BIN);
                this.columnITEM_CD = new global::System.Data.DataColumn("ITEM_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_CD);
                this.columnITEM_DESC = new global::System.Data.DataColumn("ITEM_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_DESC);
                this.columnFOR_CUSTOMER = new global::System.Data.DataColumn("FOR_CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOR_CUSTOMER);
                this.columnPART_8_DIGIT = new global::System.Data.DataColumn("PART_8_DIGIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPART_8_DIGIT);
                this.columnLOT_NO = new global::System.Data.DataColumn("LOT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_NO);
                this.columnMAIN_MATTERIAL = new global::System.Data.DataColumn("MAIN_MATTERIAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAIN_MATTERIAL);
                this.columnPACK_SIZE = new global::System.Data.DataColumn("PACK_SIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACK_SIZE);
                this.columnINV_UM_CLS = new global::System.Data.DataColumn("INV_UM_CLS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINV_UM_CLS);
                this.columnBARCODE.AllowDBNull = false;
                this.columnBARCODE.MaxLength = 40;
                this.columnITEM_CD.AllowDBNull = false;
                this.columnITEM_CD.MaxLength = 20;
                this.columnITEM_DESC.MaxLength = 50;
                this.columnFOR_CUSTOMER.MaxLength = 20;
                this.columnPART_8_DIGIT.MaxLength = 8;
                this.columnLOT_NO.MaxLength = 50;
                this.columnMAIN_MATTERIAL.MaxLength = 20;
                this.columnINV_UM_CLS.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_WIPRow NewWK_TAG_CARD_WIPRow() {
                return ((WK_TAG_CARD_WIPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WK_TAG_CARD_WIPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WK_TAG_CARD_WIPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WK_TAG_CARD_WIPRowChanged != null)) {
                    this.WK_TAG_CARD_WIPRowChanged(this, new WK_TAG_CARD_WIPRowChangeEvent(((WK_TAG_CARD_WIPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WK_TAG_CARD_WIPRowChanging != null)) {
                    this.WK_TAG_CARD_WIPRowChanging(this, new WK_TAG_CARD_WIPRowChangeEvent(((WK_TAG_CARD_WIPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WK_TAG_CARD_WIPRowDeleted != null)) {
                    this.WK_TAG_CARD_WIPRowDeleted(this, new WK_TAG_CARD_WIPRowChangeEvent(((WK_TAG_CARD_WIPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WK_TAG_CARD_WIPRowDeleting != null)) {
                    this.WK_TAG_CARD_WIPRowDeleting(this, new WK_TAG_CARD_WIPRowChangeEvent(((WK_TAG_CARD_WIPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWK_TAG_CARD_WIPRow(WK_TAG_CARD_WIPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TAGCardSchema ds = new TAGCardSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WK_TAG_CARD_WIPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WK_TAG_CARD_RMDataTable : global::System.Data.TypedTableBase<WK_TAG_CARD_RMRow> {
            
            private global::System.Data.DataColumn columnBARCODE;
            
            private global::System.Data.DataColumn columnITEM_CD;
            
            private global::System.Data.DataColumn columnITEM_DESC;
            
            private global::System.Data.DataColumn columnLOT_NO;
            
            private global::System.Data.DataColumn columnCOLOR;
            
            private global::System.Data.DataColumn columnPACK_SIZE;
            
            private global::System.Data.DataColumn columnINV_UM_CLS;
            
            private global::System.Data.DataColumn columnBARCODE2;
            
            private global::System.Data.DataColumn columnITEM_CD2;
            
            private global::System.Data.DataColumn columnITEM_DESC2;
            
            private global::System.Data.DataColumn columnLOT_NO2;
            
            private global::System.Data.DataColumn columnCOLOR2;
            
            private global::System.Data.DataColumn columnPACK_SIZE2;
            
            private global::System.Data.DataColumn columnINV_UM_CLS2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_RMDataTable() {
                this.TableName = "WK_TAG_CARD_RM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WK_TAG_CARD_RMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WK_TAG_CARD_RMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BARCODEColumn {
                get {
                    return this.columnBARCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEM_CDColumn {
                get {
                    return this.columnITEM_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEM_DESCColumn {
                get {
                    return this.columnITEM_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOT_NOColumn {
                get {
                    return this.columnLOT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COLORColumn {
                get {
                    return this.columnCOLOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_SIZEColumn {
                get {
                    return this.columnPACK_SIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INV_UM_CLSColumn {
                get {
                    return this.columnINV_UM_CLS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BARCODE2Column {
                get {
                    return this.columnBARCODE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEM_CD2Column {
                get {
                    return this.columnITEM_CD2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEM_DESC2Column {
                get {
                    return this.columnITEM_DESC2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOT_NO2Column {
                get {
                    return this.columnLOT_NO2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COLOR2Column {
                get {
                    return this.columnCOLOR2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_SIZE2Column {
                get {
                    return this.columnPACK_SIZE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INV_UM_CLS2Column {
                get {
                    return this.columnINV_UM_CLS2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_RMRow this[int index] {
                get {
                    return ((WK_TAG_CARD_RMRow)(this.Rows[index]));
                }
            }
            
            public event WK_TAG_CARD_RMRowChangeEventHandler WK_TAG_CARD_RMRowChanging;
            
            public event WK_TAG_CARD_RMRowChangeEventHandler WK_TAG_CARD_RMRowChanged;
            
            public event WK_TAG_CARD_RMRowChangeEventHandler WK_TAG_CARD_RMRowDeleting;
            
            public event WK_TAG_CARD_RMRowChangeEventHandler WK_TAG_CARD_RMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWK_TAG_CARD_RMRow(WK_TAG_CARD_RMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_RMRow AddWK_TAG_CARD_RMRow(string BARCODE, string ITEM_CD, string ITEM_DESC, string LOT_NO, string COLOR, string PACK_SIZE, string INV_UM_CLS, string BARCODE2, string ITEM_CD2, string ITEM_DESC2, string LOT_NO2, string COLOR2, string PACK_SIZE2, string INV_UM_CLS2) {
                WK_TAG_CARD_RMRow rowWK_TAG_CARD_RMRow = ((WK_TAG_CARD_RMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BARCODE,
                        ITEM_CD,
                        ITEM_DESC,
                        LOT_NO,
                        COLOR,
                        PACK_SIZE,
                        INV_UM_CLS,
                        BARCODE2,
                        ITEM_CD2,
                        ITEM_DESC2,
                        LOT_NO2,
                        COLOR2,
                        PACK_SIZE2,
                        INV_UM_CLS2};
                rowWK_TAG_CARD_RMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWK_TAG_CARD_RMRow);
                return rowWK_TAG_CARD_RMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WK_TAG_CARD_RMDataTable cln = ((WK_TAG_CARD_RMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WK_TAG_CARD_RMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBARCODE = base.Columns["BARCODE"];
                this.columnITEM_CD = base.Columns["ITEM_CD"];
                this.columnITEM_DESC = base.Columns["ITEM_DESC"];
                this.columnLOT_NO = base.Columns["LOT_NO"];
                this.columnCOLOR = base.Columns["COLOR"];
                this.columnPACK_SIZE = base.Columns["PACK_SIZE"];
                this.columnINV_UM_CLS = base.Columns["INV_UM_CLS"];
                this.columnBARCODE2 = base.Columns["BARCODE2"];
                this.columnITEM_CD2 = base.Columns["ITEM_CD2"];
                this.columnITEM_DESC2 = base.Columns["ITEM_DESC2"];
                this.columnLOT_NO2 = base.Columns["LOT_NO2"];
                this.columnCOLOR2 = base.Columns["COLOR2"];
                this.columnPACK_SIZE2 = base.Columns["PACK_SIZE2"];
                this.columnINV_UM_CLS2 = base.Columns["INV_UM_CLS2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBARCODE = new global::System.Data.DataColumn("BARCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBARCODE);
                this.columnITEM_CD = new global::System.Data.DataColumn("ITEM_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_CD);
                this.columnITEM_DESC = new global::System.Data.DataColumn("ITEM_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_DESC);
                this.columnLOT_NO = new global::System.Data.DataColumn("LOT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_NO);
                this.columnCOLOR = new global::System.Data.DataColumn("COLOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLOR);
                this.columnPACK_SIZE = new global::System.Data.DataColumn("PACK_SIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACK_SIZE);
                this.columnINV_UM_CLS = new global::System.Data.DataColumn("INV_UM_CLS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINV_UM_CLS);
                this.columnBARCODE2 = new global::System.Data.DataColumn("BARCODE2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBARCODE2);
                this.columnITEM_CD2 = new global::System.Data.DataColumn("ITEM_CD2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_CD2);
                this.columnITEM_DESC2 = new global::System.Data.DataColumn("ITEM_DESC2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_DESC2);
                this.columnLOT_NO2 = new global::System.Data.DataColumn("LOT_NO2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_NO2);
                this.columnCOLOR2 = new global::System.Data.DataColumn("COLOR2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLOR2);
                this.columnPACK_SIZE2 = new global::System.Data.DataColumn("PACK_SIZE2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACK_SIZE2);
                this.columnINV_UM_CLS2 = new global::System.Data.DataColumn("INV_UM_CLS2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINV_UM_CLS2);
                this.columnBARCODE.MaxLength = 40;
                this.columnITEM_CD.MaxLength = 20;
                this.columnITEM_DESC.MaxLength = 50;
                this.columnLOT_NO.MaxLength = 50;
                this.columnCOLOR.MaxLength = 20;
                this.columnINV_UM_CLS.MaxLength = 5;
                this.columnBARCODE2.MaxLength = 40;
                this.columnITEM_CD2.MaxLength = 20;
                this.columnITEM_DESC2.MaxLength = 50;
                this.columnLOT_NO2.MaxLength = 50;
                this.columnCOLOR2.MaxLength = 20;
                this.columnINV_UM_CLS2.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_RMRow NewWK_TAG_CARD_RMRow() {
                return ((WK_TAG_CARD_RMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WK_TAG_CARD_RMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WK_TAG_CARD_RMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WK_TAG_CARD_RMRowChanged != null)) {
                    this.WK_TAG_CARD_RMRowChanged(this, new WK_TAG_CARD_RMRowChangeEvent(((WK_TAG_CARD_RMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WK_TAG_CARD_RMRowChanging != null)) {
                    this.WK_TAG_CARD_RMRowChanging(this, new WK_TAG_CARD_RMRowChangeEvent(((WK_TAG_CARD_RMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WK_TAG_CARD_RMRowDeleted != null)) {
                    this.WK_TAG_CARD_RMRowDeleted(this, new WK_TAG_CARD_RMRowChangeEvent(((WK_TAG_CARD_RMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WK_TAG_CARD_RMRowDeleting != null)) {
                    this.WK_TAG_CARD_RMRowDeleting(this, new WK_TAG_CARD_RMRowChangeEvent(((WK_TAG_CARD_RMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWK_TAG_CARD_RMRow(WK_TAG_CARD_RMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TAGCardSchema ds = new TAGCardSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WK_TAG_CARD_RMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WK_TAG_CARD_FGRow : global::System.Data.DataRow {
            
            private WK_TAG_CARD_FGDataTable tableWK_TAG_CARD_FG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WK_TAG_CARD_FGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWK_TAG_CARD_FG = ((WK_TAG_CARD_FGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BARCODE {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.BARCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BARCODE\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.BARCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] IMAGE_BIN {
                get {
                    try {
                        return ((byte[])(this[this.tableWK_TAG_CARD_FG.IMAGE_BINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IMAGE_BIN\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.IMAGE_BINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_CD {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.ITEM_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEM_CD\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.ITEM_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_DESC {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.ITEM_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEM_DESC\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.ITEM_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FOR_CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.FOR_CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FOR_CUSTOMER\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.FOR_CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PART_8_DIGIT {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.PART_8_DIGITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PART_8_DIGIT\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.PART_8_DIGITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOT_NO {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.LOT_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOT_NO\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.LOT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PACK_SIZE {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.PACK_SIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PACK_SIZE\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.PACK_SIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INV_UM_CLS {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.INV_UM_CLSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INV_UM_CLS\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.INV_UM_CLSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BARCODE2 {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.BARCODE2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BARCODE2\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.BARCODE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] IMAGE_BIN2 {
                get {
                    try {
                        return ((byte[])(this[this.tableWK_TAG_CARD_FG.IMAGE_BIN2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IMAGE_BIN2\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.IMAGE_BIN2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_CD2 {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.ITEM_CD2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEM_CD2\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.ITEM_CD2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_DESC2 {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.ITEM_DESC2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEM_DESC2\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.ITEM_DESC2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FOR_CUSTOMER2 {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.FOR_CUSTOMER2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FOR_CUSTOMER2\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.FOR_CUSTOMER2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PART_8_DIGIT2 {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.PART_8_DIGIT2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PART_8_DIGIT2\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.PART_8_DIGIT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOT_NO2 {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.LOT_NO2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOT_NO2\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.LOT_NO2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PACK_SIZE2 {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.PACK_SIZE2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PACK_SIZE2\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.PACK_SIZE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INV_UM_CLS2 {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.INV_UM_CLS2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INV_UM_CLS2\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.INV_UM_CLS2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODEL {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.MODELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MODEL\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.MODELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODEL2 {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_FG.MODEL2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MODEL2\' in table \'WK_TAG_CARD_FG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_FG.MODEL2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBARCODENull() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.BARCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBARCODENull() {
                this[this.tableWK_TAG_CARD_FG.BARCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIMAGE_BINNull() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.IMAGE_BINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIMAGE_BINNull() {
                this[this.tableWK_TAG_CARD_FG.IMAGE_BINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_CDNull() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.ITEM_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_CDNull() {
                this[this.tableWK_TAG_CARD_FG.ITEM_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_DESCNull() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.ITEM_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_DESCNull() {
                this[this.tableWK_TAG_CARD_FG.ITEM_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFOR_CUSTOMERNull() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.FOR_CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFOR_CUSTOMERNull() {
                this[this.tableWK_TAG_CARD_FG.FOR_CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPART_8_DIGITNull() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.PART_8_DIGITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPART_8_DIGITNull() {
                this[this.tableWK_TAG_CARD_FG.PART_8_DIGITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOT_NONull() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.LOT_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOT_NONull() {
                this[this.tableWK_TAG_CARD_FG.LOT_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_SIZENull() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.PACK_SIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_SIZENull() {
                this[this.tableWK_TAG_CARD_FG.PACK_SIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINV_UM_CLSNull() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.INV_UM_CLSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINV_UM_CLSNull() {
                this[this.tableWK_TAG_CARD_FG.INV_UM_CLSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBARCODE2Null() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.BARCODE2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBARCODE2Null() {
                this[this.tableWK_TAG_CARD_FG.BARCODE2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIMAGE_BIN2Null() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.IMAGE_BIN2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIMAGE_BIN2Null() {
                this[this.tableWK_TAG_CARD_FG.IMAGE_BIN2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_CD2Null() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.ITEM_CD2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_CD2Null() {
                this[this.tableWK_TAG_CARD_FG.ITEM_CD2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_DESC2Null() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.ITEM_DESC2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_DESC2Null() {
                this[this.tableWK_TAG_CARD_FG.ITEM_DESC2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFOR_CUSTOMER2Null() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.FOR_CUSTOMER2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFOR_CUSTOMER2Null() {
                this[this.tableWK_TAG_CARD_FG.FOR_CUSTOMER2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPART_8_DIGIT2Null() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.PART_8_DIGIT2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPART_8_DIGIT2Null() {
                this[this.tableWK_TAG_CARD_FG.PART_8_DIGIT2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOT_NO2Null() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.LOT_NO2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOT_NO2Null() {
                this[this.tableWK_TAG_CARD_FG.LOT_NO2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_SIZE2Null() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.PACK_SIZE2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_SIZE2Null() {
                this[this.tableWK_TAG_CARD_FG.PACK_SIZE2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINV_UM_CLS2Null() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.INV_UM_CLS2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINV_UM_CLS2Null() {
                this[this.tableWK_TAG_CARD_FG.INV_UM_CLS2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODELNull() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.MODELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODELNull() {
                this[this.tableWK_TAG_CARD_FG.MODELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODEL2Null() {
                return this.IsNull(this.tableWK_TAG_CARD_FG.MODEL2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODEL2Null() {
                this[this.tableWK_TAG_CARD_FG.MODEL2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WK_TAG_CARD_WIPRow : global::System.Data.DataRow {
            
            private WK_TAG_CARD_WIPDataTable tableWK_TAG_CARD_WIP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WK_TAG_CARD_WIPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWK_TAG_CARD_WIP = ((WK_TAG_CARD_WIPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BARCODE {
                get {
                    return ((string)(this[this.tableWK_TAG_CARD_WIP.BARCODEColumn]));
                }
                set {
                    this[this.tableWK_TAG_CARD_WIP.BARCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] IMAGE_BIN {
                get {
                    try {
                        return ((byte[])(this[this.tableWK_TAG_CARD_WIP.IMAGE_BINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IMAGE_BIN\' in table \'WK_TAG_CARD_WIP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_WIP.IMAGE_BINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_CD {
                get {
                    return ((string)(this[this.tableWK_TAG_CARD_WIP.ITEM_CDColumn]));
                }
                set {
                    this[this.tableWK_TAG_CARD_WIP.ITEM_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_DESC {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_WIP.ITEM_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEM_DESC\' in table \'WK_TAG_CARD_WIP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_WIP.ITEM_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FOR_CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_WIP.FOR_CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FOR_CUSTOMER\' in table \'WK_TAG_CARD_WIP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_WIP.FOR_CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PART_8_DIGIT {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_WIP.PART_8_DIGITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PART_8_DIGIT\' in table \'WK_TAG_CARD_WIP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_WIP.PART_8_DIGITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOT_NO {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_WIP.LOT_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOT_NO\' in table \'WK_TAG_CARD_WIP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_WIP.LOT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAIN_MATTERIAL {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_WIP.MAIN_MATTERIALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAIN_MATTERIAL\' in table \'WK_TAG_CARD_WIP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_WIP.MAIN_MATTERIALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PACK_SIZE {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_WIP.PACK_SIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PACK_SIZE\' in table \'WK_TAG_CARD_WIP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_WIP.PACK_SIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INV_UM_CLS {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_WIP.INV_UM_CLSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INV_UM_CLS\' in table \'WK_TAG_CARD_WIP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_WIP.INV_UM_CLSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIMAGE_BINNull() {
                return this.IsNull(this.tableWK_TAG_CARD_WIP.IMAGE_BINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIMAGE_BINNull() {
                this[this.tableWK_TAG_CARD_WIP.IMAGE_BINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_DESCNull() {
                return this.IsNull(this.tableWK_TAG_CARD_WIP.ITEM_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_DESCNull() {
                this[this.tableWK_TAG_CARD_WIP.ITEM_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFOR_CUSTOMERNull() {
                return this.IsNull(this.tableWK_TAG_CARD_WIP.FOR_CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFOR_CUSTOMERNull() {
                this[this.tableWK_TAG_CARD_WIP.FOR_CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPART_8_DIGITNull() {
                return this.IsNull(this.tableWK_TAG_CARD_WIP.PART_8_DIGITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPART_8_DIGITNull() {
                this[this.tableWK_TAG_CARD_WIP.PART_8_DIGITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOT_NONull() {
                return this.IsNull(this.tableWK_TAG_CARD_WIP.LOT_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOT_NONull() {
                this[this.tableWK_TAG_CARD_WIP.LOT_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAIN_MATTERIALNull() {
                return this.IsNull(this.tableWK_TAG_CARD_WIP.MAIN_MATTERIALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAIN_MATTERIALNull() {
                this[this.tableWK_TAG_CARD_WIP.MAIN_MATTERIALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_SIZENull() {
                return this.IsNull(this.tableWK_TAG_CARD_WIP.PACK_SIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_SIZENull() {
                this[this.tableWK_TAG_CARD_WIP.PACK_SIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINV_UM_CLSNull() {
                return this.IsNull(this.tableWK_TAG_CARD_WIP.INV_UM_CLSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINV_UM_CLSNull() {
                this[this.tableWK_TAG_CARD_WIP.INV_UM_CLSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WK_TAG_CARD_RMRow : global::System.Data.DataRow {
            
            private WK_TAG_CARD_RMDataTable tableWK_TAG_CARD_RM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WK_TAG_CARD_RMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWK_TAG_CARD_RM = ((WK_TAG_CARD_RMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BARCODE {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_RM.BARCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BARCODE\' in table \'WK_TAG_CARD_RM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_RM.BARCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_CD {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_RM.ITEM_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEM_CD\' in table \'WK_TAG_CARD_RM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_RM.ITEM_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_DESC {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_RM.ITEM_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEM_DESC\' in table \'WK_TAG_CARD_RM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_RM.ITEM_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOT_NO {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_RM.LOT_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOT_NO\' in table \'WK_TAG_CARD_RM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_RM.LOT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COLOR {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_RM.COLORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLOR\' in table \'WK_TAG_CARD_RM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_RM.COLORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PACK_SIZE {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_RM.PACK_SIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PACK_SIZE\' in table \'WK_TAG_CARD_RM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_RM.PACK_SIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INV_UM_CLS {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_RM.INV_UM_CLSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INV_UM_CLS\' in table \'WK_TAG_CARD_RM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_RM.INV_UM_CLSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BARCODE2 {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_RM.BARCODE2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BARCODE2\' in table \'WK_TAG_CARD_RM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_RM.BARCODE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_CD2 {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_RM.ITEM_CD2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEM_CD2\' in table \'WK_TAG_CARD_RM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_RM.ITEM_CD2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_DESC2 {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_RM.ITEM_DESC2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEM_DESC2\' in table \'WK_TAG_CARD_RM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_RM.ITEM_DESC2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOT_NO2 {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_RM.LOT_NO2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOT_NO2\' in table \'WK_TAG_CARD_RM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_RM.LOT_NO2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COLOR2 {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_RM.COLOR2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLOR2\' in table \'WK_TAG_CARD_RM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_RM.COLOR2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PACK_SIZE2 {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_RM.PACK_SIZE2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PACK_SIZE2\' in table \'WK_TAG_CARD_RM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_RM.PACK_SIZE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INV_UM_CLS2 {
                get {
                    try {
                        return ((string)(this[this.tableWK_TAG_CARD_RM.INV_UM_CLS2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INV_UM_CLS2\' in table \'WK_TAG_CARD_RM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWK_TAG_CARD_RM.INV_UM_CLS2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBARCODENull() {
                return this.IsNull(this.tableWK_TAG_CARD_RM.BARCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBARCODENull() {
                this[this.tableWK_TAG_CARD_RM.BARCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_CDNull() {
                return this.IsNull(this.tableWK_TAG_CARD_RM.ITEM_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_CDNull() {
                this[this.tableWK_TAG_CARD_RM.ITEM_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_DESCNull() {
                return this.IsNull(this.tableWK_TAG_CARD_RM.ITEM_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_DESCNull() {
                this[this.tableWK_TAG_CARD_RM.ITEM_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOT_NONull() {
                return this.IsNull(this.tableWK_TAG_CARD_RM.LOT_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOT_NONull() {
                this[this.tableWK_TAG_CARD_RM.LOT_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOLORNull() {
                return this.IsNull(this.tableWK_TAG_CARD_RM.COLORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOLORNull() {
                this[this.tableWK_TAG_CARD_RM.COLORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_SIZENull() {
                return this.IsNull(this.tableWK_TAG_CARD_RM.PACK_SIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_SIZENull() {
                this[this.tableWK_TAG_CARD_RM.PACK_SIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINV_UM_CLSNull() {
                return this.IsNull(this.tableWK_TAG_CARD_RM.INV_UM_CLSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINV_UM_CLSNull() {
                this[this.tableWK_TAG_CARD_RM.INV_UM_CLSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBARCODE2Null() {
                return this.IsNull(this.tableWK_TAG_CARD_RM.BARCODE2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBARCODE2Null() {
                this[this.tableWK_TAG_CARD_RM.BARCODE2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_CD2Null() {
                return this.IsNull(this.tableWK_TAG_CARD_RM.ITEM_CD2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_CD2Null() {
                this[this.tableWK_TAG_CARD_RM.ITEM_CD2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_DESC2Null() {
                return this.IsNull(this.tableWK_TAG_CARD_RM.ITEM_DESC2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_DESC2Null() {
                this[this.tableWK_TAG_CARD_RM.ITEM_DESC2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOT_NO2Null() {
                return this.IsNull(this.tableWK_TAG_CARD_RM.LOT_NO2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOT_NO2Null() {
                this[this.tableWK_TAG_CARD_RM.LOT_NO2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOLOR2Null() {
                return this.IsNull(this.tableWK_TAG_CARD_RM.COLOR2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOLOR2Null() {
                this[this.tableWK_TAG_CARD_RM.COLOR2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_SIZE2Null() {
                return this.IsNull(this.tableWK_TAG_CARD_RM.PACK_SIZE2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_SIZE2Null() {
                this[this.tableWK_TAG_CARD_RM.PACK_SIZE2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINV_UM_CLS2Null() {
                return this.IsNull(this.tableWK_TAG_CARD_RM.INV_UM_CLS2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINV_UM_CLS2Null() {
                this[this.tableWK_TAG_CARD_RM.INV_UM_CLS2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WK_TAG_CARD_FGRowChangeEvent : global::System.EventArgs {
            
            private WK_TAG_CARD_FGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_FGRowChangeEvent(WK_TAG_CARD_FGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_FGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WK_TAG_CARD_WIPRowChangeEvent : global::System.EventArgs {
            
            private WK_TAG_CARD_WIPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_WIPRowChangeEvent(WK_TAG_CARD_WIPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_WIPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WK_TAG_CARD_RMRowChangeEvent : global::System.EventArgs {
            
            private WK_TAG_CARD_RMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_RMRowChangeEvent(WK_TAG_CARD_RMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WK_TAG_CARD_RMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591