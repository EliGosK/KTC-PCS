<configuration>
	<showwindow>true</showwindow>
	<showsummaryresult>false</showsummaryresult>
	<!--
  - application automatic connect to server on start, if set autoconnect = true.
    otherwise application will connect to server on demand.
  -->
	<autoconnect>false</autoconnect>
	<server>pc-s</server>
	<!--
    Name of user that use to connecto to server.
    - <user>username</user>
    - <user>domain/username</user>
  -->
	<user></user>
	<passwd></passwd>
	<!--There two methods
    1. sharing   //transfer data over network sharing
    2. ftp
  -->
	<method>SHARING</method>
	<!--string path, local path (full path only) to get update from server-->
	<localpath>.</localpath>
	<!--
    string path, direction folder to make update from server 
    - for normal connection (copy over share resource), you must specify in form \\server\share_dir
      <remotepath>\\server\share_dir</remotepath>
      
    - for ftp connection, you mus specify path with '/' delimeter 
      <remotepath>/pub/download_dir</remotepath>
  
      <remotepath>\\fileserver\Picture\EmployeeImage</remotepath>
      <remotepath>\\Eakkalak\Minute of Meeting</remotepath>
  -->
	<remotepath>\\pc-s\Autoupdate</remotepath>
	<!--
    flag to specify method to compare file before get to local.
     - version, to compare file by version between location (not support on ftp connection)
     - size, to compare file by size of file
     - md5, to compare file by using hash function of two file then compare the result.
          (this method will slow if file size greater than 10MB, and not support on ftp connection)
     - createddate, to compare file with created date
     
     
     -### There are 4 condition in comparation but you can use only one condition in run time.###
     
    <comparation version="false" size="false" modifieddate="true"></comparation>
  -->
	<comparation version="false" size="false" modifieddate="true"></comparation>
	<!--
    backup = true, application will backup old version before get the new.
    backup = false, application will overwrite with the new files.
  -->
	<backup>false</backup>
	<!--
    string path that will stored backup file
  -->
	<backuppath>D:\KTC-PCS\backup</backuppath>
	<!--
    -execute on start application
    <schedule execute="runonce" close_on_success="true">
    </schedule>
    
    -execute every 60 second
    <schedule execute="ontime">
      <every interval="60"></every>
    </schedule>
    
    -execute on every 12:00 of monday, tuesday, wednesday
    <schedule execute="ontime">
      <startat time="12:00" day="monday,tuesday,wednesday"></startat>
    </schedule>
  -->
	<schedule execute="runonce" close_on_success="true">
	</schedule>
	<!--
  Execute path, application path to execute after synchronize
  
  <execute path='C:\WINDOWS\system32\calc.exe' param=''></execute>
  <execute path='C:\WINDOWS\system32\calc.exe' param='arg1 agr2 agr3'></execute>
  -->
	<execute path="Rubik.exe" param="SkipAutoUpdate"></execute>
</configuration>
